digraph parse_tree{
Child1 [label="5"];
Node0 [label="constant"];
Node0 -> Child1;
Node2 [label="expression"];
Node2 -> Node0;
Child4 [label="my"];
Child5 [label="$a"];
Child6 [label="="];
Child7 [label=";"];
Node3 [label="assignment"];
Node3 -> Child4;
Node3 -> Child5;
Node3 -> Child6;
Node3 -> Node2;
Node3 -> Child7;
Node8 [label="statement"];
Node8 -> Node3;
Child10 [label="$a"];
Node9 [label="expression"];
Node9 -> Child10;
Child12 [label="0"];
Node11 [label="constant"];
Node11 -> Child12;
Node13 [label="expression"];
Node13 -> Node11;
Child15 [label=">"];
Node14 [label="expression"];
Node14 -> Node9;
Node14 -> Child15;
Node14 -> Node13;
Child17 [label="$a "];
Node16 [label="constant"];
Node16 -> Child17;
Node18 [label="expression"];
Node18 -> Node16;
Node19 [label="printlist"];
Node19 -> Node18;
Child21 [label="print"];
Child22 [label=";"];
Node20 [label="print"];
Node20 -> Child21;
Node20 -> Node19;
Node20 -> Child22;
Node23 [label="statement"];
Node23 -> Node20;
Child25 [label="$a"];
Node24 [label="expression"];
Node24 -> Child25;
Child27 [label="--"];
Node26 [label="expression"];
Node26 -> Node24;
Node26 -> Child27;
Child29 [label=";"];
Node28 [label="statement"];
Node28 -> Node26;
Node28 -> Child29;
Node30 [label="statements"];
Node30 -> Node28;
Node31 [label="statements"];
Node31 -> Node23;
Node31 -> Node30;
Child33 [label="{"];
Child34 [label="}"];
Node32 [label="block"];
Node32 -> Child33;
Node32 -> Node31;
Node32 -> Child34;
Node35 [label="block_or_statement"];
Node35 -> Node32;
Child37 [label="while"];
Child38 [label="("];
Child39 [label=")"];
Node36 [label="statement"];
Node36 -> Child37;
Node36 -> Child38;
Node36 -> Node14;
Node36 -> Child39;
Node36 -> Node35;
Child41 [label="\n"];
Node40 [label="constant"];
Node40 -> Child41;
Node42 [label="expression"];
Node42 -> Node40;
Node43 [label="printlist"];
Node43 -> Node42;
Child45 [label="print"];
Child46 [label=";"];
Node44 [label="print"];
Node44 -> Child45;
Node44 -> Node43;
Node44 -> Child46;
Node47 [label="statement"];
Node47 -> Node44;
Node48 [label="statements"];
Node48 -> Node47;
Node49 [label="statements"];
Node49 -> Node36;
Node49 -> Node48;
Node50 [label="statements"];
Node50 -> Node8;
Node50 -> Node49;
Node51 [label="statements_subroutine"];
Node51 -> Node50;
Node52 [label="segments"];
Node52 -> Node51;
Node53 [label="start"];
Node53 -> Node52;
{ rank=same;
Child4 ->Child5 ->Child6 ->Child1 ->Child7 ->Child37 ->Child38 ->Child10 ->Child15 ->Child12 ->Child39 ->Child33 ->Child21 ->Child17 ->Child22 ->Child25 ->Child27 ->Child29 ->Child34 ->Child45 ->Child41 ->Child46 [style=invis];
}
}
